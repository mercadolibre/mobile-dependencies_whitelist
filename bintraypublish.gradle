apply plugin: 'com.jfrog.bintray'

// Default site and Git URLs (used only in this project and overwritten in the Library Plugin).
def siteUrl = 'http://github.com/mercadolibre/mobile-android_gradle'
def gitUrl = 'http://github.com/mercadolibre/mobile-android_gradle.git'

bintray {
    def taskName = project.getGradle().startParameter.taskNames.get(0);
    if (!taskName.contains("bintray")) {
        return;
    }

    def BINTRAY_USER_ENV = 'BINTRAY_USER'
    def BINTRAY_KEY_ENV = 'BINTRAY_KEY'
    def BINTRAY_PROP_FILE = 'bintray.properties'
    def BINTRAY_USER_PROP = 'bintray.user'
    def BINTRAY_KEY_PROP = 'bintray.key'

    File propsFile = file(BINTRAY_PROP_FILE)
    if (propsFile.exists()) {
        println "[!] Load Bintray credentials from '${BINTRAY_PROP_FILE}'. Please don't versioning this file."
        Properties props = new Properties();
        props.load(new FileInputStream(BINTRAY_PROP_FILE))
        user = props.getProperty(BINTRAY_USER_PROP)
        key = props.getProperty(BINTRAY_KEY_PROP)
    } else if (System.getenv(BINTRAY_USER_ENV) && System.getenv(BINTRAY_KEY_ENV)) {
        user = System.getenv(BINTRAY_USER_ENV)
        key = System.getenv(BINTRAY_KEY_ENV)
    } else {
        println "[!] Missing Bintray credentials"
        println "    You can set this values as enviroment variables: '${BINTRAY_USER_ENV}' and '${BINTRAY_KEY_ENV}'"
        println "    or into a property file ('${BINTRAY_PROP_FILE}'): '${BINTRAY_USER_PROP}' and '${BINTRAY_KEY_PROP}'"
    }
    dryRun = false
    publish = true
    configurations = ['archives'] // When uploading configuration files.
    pkg {
        repo = 'android-releases'
        userOrg = 'mercadolibre'
        name = "${group}.${project.name}"
        issueTrackerUrl = "${siteUrl}/issues"
        vcsUrl = gitUrl
        labels = ['aar', 'gradle-plugin', 'android']
        publicDownloadNumbers = false
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                url siteUrl
            }
        }
    }
}

task getProjectVersion << {
    println projectVersion
}
