/**
 * @name ast-monkey-traverse
 * @fileoverview Utility library to traverse AST
 * @version 4.0.0
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/ast-monkey-traverse/}
 */

import p from"lodash.clonedeep";import f from"lodash.isplainobject";import{parent as m}from"ast-monkey-util";var u="4.0.0";var O=u;function D(c,y){let d={now:!1};function i($,l,b,n){let r=p($),s,t={depth:-1,path:"",...b};if(t.depth+=1,Array.isArray(r))for(let e=0,o=r.length;e<o&&!n.now;e++){let a=t.path?`${t.path}.${e}`:`${e}`;r[e]!==void 0?(t.parent=p(r),t.parentType="array",t.parentKey=m(a),s=i(l(r[e],void 0,{...t,path:a},n),l,{...t,path:a},n),Number.isNaN(s)&&e<r.length?(r.splice(e,1),e-=1):r[e]=s):r.splice(e,1)}else if(f(r))for(let e in r){if(n.now&&e!=null)break;let o=t.path?`${t.path}.${e}`:e;t.depth===0&&e!=null&&(t.topmostKey=e),t.parent=p(r),t.parentType="object",t.parentKey=m(o),s=i(l(e,r[e],{...t,path:o},n),l,{...t,path:o},n),Number.isNaN(s)?delete r[e]:r[e]=s}return r}return i(c,y,{},d)}export{D as traverse,O as version};
